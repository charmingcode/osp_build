
# .bashrc

if [ -f /etc/bashrc ]; then
  . /etc/bashrc
fi

export LANG=en_US.UTF-8
export CPP_ROOT=/usr/local/osp-devel/ospcpp2
export DEV_HOME=/usr/local/osp-devel
export AR=/usr/local/osp-devel/ospcpp2/built/gcc-8.3.0-7u2/gcc-8.3.0/bin/x86_64-pc-linux-gnu-gcc-ar
#export CC=/usr/local/osp-devel/bin/ccache-gcc
#export CXX=/usr/local/osp-devel/bin/ccache-g++
#export NM=/usr/local/osp-devel/ospcpp2/built/gcc-8.3.0-7u2/gcc-8.3.0/bin/x86_64-pc-linux-gnu-gcc-nm
#export RANLIB=/usr/local/osp-devel/ospcpp2/built/gcc-8.3.0-7u2/gcc-8.3.0/bin/x86_64-pc-linux-gnu-gcc-ranlib
#export JAVA_HOME=/opt/install/jdk-8_2_4-b52
export GO111MODULE=on
export GOSUMDB=sum.golang.google.cn
export GOROOT=/usr/local/osp-devel/go/
export GOPATH=$HOME/gopath
export GOPRIVATE=*.ospbaba-inc.com
export GOPROXY=https://goproxy.cn,direct
export PATH=/usr/local/osp-build/hmod:/usr/local/osp-build/onebox:/usr/local/osp-build/hvm:$JAVA_HOME/bin:$DEV_HOME/ak/arcanist/bin:$DEV_HOME/emacs/bin:$GOROOT/bin:$ALICPP_ROOT/built/go-1.12.1/protoc-gen-go-1.3.1/bin:/usr/local/node-v10.16.0-linux-x64/bin:/opt/intel/vtune_profiler_2020.0.0.605129/bin64:$GOPATH/bin:$PATH
export PS1='\n\e[1;37m[\e[m\e[1;32mdocker-$NAME\e[m\e[1;33m@\e[m\e[1;35m\H\e[m \e[4m`pwd`\e[m\e[1;37m]\e[m\e[1;36m\e[m\n\$'
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
export OSP_DOCKER_IMAGE_ID=$IMAGE_ID
export OSP_DOCKER_NAME=$NAME
export HADOOP_HOME=/usr/local/hadoop-3.1.3
# 解决 ttyd 运行报错  
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib64
# ADD vtune vars
source /opt/intel/vtune_profiler_2020.0.0.605129/amplxe-vars.sh >/dev/null 2>&1
# enable coredump in asan
export ASAN_OPTIONS=abort_on_error=1:disable_coredump=0::unmap_shadow_on_exit=1
export OSP_MAKE_JOBS=`cat /proc/cpuinfo |grep processor|wc -l`
# Turn on this env var in development docker, to enable some sensitive features in testing.
export OSP_DEVELOPMENT=1
git config --global url."git@gitlab.ospbaba-inc.com:".insteadOf https://gitlab.ospbaba-inc.com/

ccache -M 50G > /dev/null 2>&1

# register git-repo
git-repo >/dev/null 2>&1
\
AUTO_COMPLETE_DIR=/usr/local/osp-build/conf/auto_complete
if [ -d $AUTO_COMPLETE_DIR  ]; then
  AUTO_COMPLETE_BASHES=("`find $AUTO_COMPLETE_DIR -type f -name \"osp_*.sh\"`")
  for BASH in ${AUTO_COMPLETE_BASHES[@]}; do
    source $BASH
  done
fi

if [ -f $HOME/.osp/bashrc ]; then
  . $HOME/.osp/bashrc
fi

